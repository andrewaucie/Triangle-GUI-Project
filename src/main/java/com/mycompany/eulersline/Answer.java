/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.eulersline;

/**
 *
 * @author andre
 */
public class Answer extends javax.swing.JFrame {

    /**
     * Creates new form Answer
     */
    String eulerLine,sides,angles;
    double[] centroid=new double[1];
    double[] orthocenter=new double[1];
    double[] circumcenter=new double[1];
    double area,perimeter;
    double[] sideLength=new double[2];
    double[] angle=new double[2];
    public void EulersLine(String txt) {
       eulerLine=txt;
    }
    public void Centroid(double[] i) {
        centroid=i.clone();
    } 
    public void Orthocenter(double[] i) {
        orthocenter=i.clone();
    }
    public void Circumcenter(double[] i) {
        circumcenter=i.clone();
    }
    public void SideLength(double[] i) {
        sideLength=i.clone();
        perimeter=sideLength[0]+sideLength[1]+sideLength[2];
        if (sideLength[0]==sideLength[1] && sideLength[0]==sideLength[2]) 
            sides="equaliteral"; 
        else if (sideLength[0]==sideLength[1]||sideLength[0]==sideLength[2]||sideLength[2]==sideLength[1])
            sides="isosceles";
        else
            sides="scalene";
    }
    public void Angle(double[] i) {
        angle=i.clone();
        angle[0]*=180/Math.PI;
        angle[1]*=180/Math.PI;
        angle[2]*=180/Math.PI;
        if (angle[0]>90 || angle[1]>90 || angle[2]>90) 
            angles="an obtuse"; 
        else if (angle[0]==90 || angle[1]==90 || angle[2]==90)
            angles="a right";
        else if (angle[0]<90 && angle[1]<90 && angle[2]<90)
            angles="an acute";
        text.setText("You have entered "+angles+" "+sides+" triangle with the following vertices:");
    }
    public void Area(double i) {
        area=i;

    }
    public void setVertices(double[] A, double[] B, double[] C) {
        text1.setText("A ("+A[0]+",  "+A[1]+")");
        text2.setText("B ("+B[0]+",  "+B[1]+")");
        text3.setText("C ("+C[0]+",  "+C[1]+")");
    } 

    public Answer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        text2 = new javax.swing.JLabel();
        text3 = new javax.swing.JLabel();
        text1 = new javax.swing.JLabel();
        answersText = new javax.swing.JLabel();
        comBox = new javax.swing.JComboBox<>();
        text = new javax.swing.JLabel();
        mainText = new javax.swing.JScrollPane();
        mainText1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 36)); // NOI18N
        jLabel1.setText("Triangle Properties");

        text2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        text2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        text2.setText("B");
        text2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        text3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        text3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        text3.setText("C");
        text3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        text1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        text1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        text1.setText("A");
        text1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        answersText.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        answersText.setText("Choose a property of this triangle to view  ");

        comBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Choose Property>", "Area", "Perimeter", "Side Lengths", "Angles", "Centroid", "Orthocenter", "Circumcenter", "Euler's Line" }));
        comBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxActionPerformed(evt);
            }
        });

        text.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        text.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        text.setText("Description");
        text.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        mainText1.setEditable(false);
        mainText1.setColumns(20);
        mainText1.setFont(new java.awt.Font("Tahoma", 0, 14));
        mainText1.setRows(5);
        mainText.setViewportView(mainText1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(text1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                        .addComponent(text2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(text3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(answersText, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainText, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text3)))
                .addGap(18, 18, 18)
                .addComponent(answersText, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mainText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void comBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxActionPerformed
        // TODO add your handling code here:
        String value=(String)comBox.getSelectedItem();
        
        switch(value)
        {
            case "Area":
                mainText1.setFont(new java.awt.Font("Tahoma", 0, 16));
                mainText1.setText("The triangle formed has an area of "+Double.toString(Math.round(area * 100d) / 100d));
                break;
            case "Perimeter":
                mainText1.setFont(new java.awt.Font("Tahoma", 0, 16));
                mainText1.setText("The triangle formed has a perimeter of ");
                mainText1.append(Double.toString(Math.round(perimeter * 100d) / 100d));
                break;
            case "Side Lengths":
                mainText1.setFont(new java.awt.Font("Tahoma", 0, 16));
                mainText1.setText("The triangle formed has the following side lengths: \n\nAB  =  ");
                mainText1.append(Double.toString(Math.round(sideLength[2] * 100d) / 100d)+" \nAC  =  "+Double.toString(Math.round(sideLength[1] * 100d) / 100d)+" \nBC  =  "+Double.toString(Math.round(sideLength[0] * 100d) / 100d));
                break;
            case "Angles":
                mainText1.setFont(new java.awt.Font("Tahoma", 0, 16));
                mainText1.setText("The triangle formed contains the following interior angles: \n\n <A  =  "+Double.toString(Math.round(angle[0]* 100d) / 100d)+"\u00B0 \n <B  =  "+Double.toString(Math.round(angle[1]* 100d) / 100d)+"\u00B0 \n <C  =  "+Double.toString(Math.round(angle[2]* 100d) / 100d)+"\u00B0");
                break;
            case "Orthocenter":
                mainText1.setFont(new java.awt.Font("Tahoma", 0, 16));
                mainText1.setText("The orthocenter of a triangle is where all 3 altitudes intersect \n\nThe triangle formed has an orthocenter at: \n\n("+Double.toString(Math.round(orthocenter[0]* 100d) / 100d)+",  "+Double.toString(Math.round(orthocenter[1]* 100d) / 100d)+")");
                break;
            case "Centroid":
                mainText1.setFont(new java.awt.Font("Tahoma", 0, 16));
                mainText1.setText("The centroid of a triangle is where all 3 medians intersect \n\nThe triangle formed has a centroid at: \n\n("+Double.toString(Math.round(centroid[0]* 100d) / 100d)+",  "+Double.toString(Math.round(centroid[1]* 100d) / 100d)+")");
                break;
            case "Circumcenter":
                mainText1.setFont(new java.awt.Font("Tahoma", 0, 14));
                mainText1.setText("The circumcenter of a triangle is where all 3 perpendicular bisectors intersect \n\nThe triangle formed has an orthocenter at: \n\n("+Double.toString(Math.round(circumcenter[0]* 100d) / 100d)+",  "+Double.toString(Math.round(circumcenter[1]* 100d) / 100d)+")");
                break;
            case "Euler's Line":
                mainText1.setFont(new java.awt.Font("Tahoma", 0, 14));
                mainText1.setText("Euler's line is a line that goes through the orthocenter, centroid, and circumcenter \n\nThe Euler line of triangle ABC has an equation of \n\n"+eulerLine);
                break;
            default:
                mainText1.setText("");
                break;
        }
    }//GEN-LAST:event_comBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Answer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Answer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Answer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Answer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Answer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel answersText;
    private javax.swing.JComboBox<String> comBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane mainText;
    private javax.swing.JTextArea mainText1;
    private javax.swing.JLabel text;
    private javax.swing.JLabel text1;
    private javax.swing.JLabel text2;
    private javax.swing.JLabel text3;
    // End of variables declaration//GEN-END:variables

}
