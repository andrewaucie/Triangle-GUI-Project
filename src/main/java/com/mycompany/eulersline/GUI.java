package com.mycompany.eulersline;

import javax.swing.JOptionPane;

public class GUI extends javax.swing.JFrame {
    public static double[] sideLength(double[] P, double[] Q, double[] R) {
        double PQ=Math.sqrt(Math.pow((P[0]-Q[0]),2)+Math.pow((P[1]-Q[1]),2));
        double PR=Math.sqrt(Math.pow((P[0]-R[0]),2)+Math.pow((P[1]-R[1]),2));
        double QR=Math.sqrt(Math.pow((Q[0]-R[0]),2)+Math.pow((Q[1]-R[1]),2));
        double[] length=new double[]{QR,PR,PQ};
        return(length);
    }
    public static double area(double[] P, double[] Q, double[] R) {
        double s=(sideLength(P,Q,R)[0]+sideLength(P,Q,R)[1]+sideLength(P,Q,R)[2])/2;
        double A=Math.sqrt(s*(s-sideLength(P,Q,R)[0])*(s-sideLength(P,Q,R)[1])*(s-sideLength(P,Q,R)[2]));
        return(A);
    }
    public static double[] angle(double[] P, double[] Q, double[] R) {
        double angleP;
        double angleQ;
        double angleR;
        double p=sideLength(P,Q,R)[0];
        double q=sideLength(P,Q,R)[1];
        double r=sideLength(P,Q,R)[2];
        angleP = Math.acos((Math.pow(q,2)+Math.pow(r,2)-Math.pow(p,2))/(2*q*r));
        angleQ = Math.acos((Math.pow(p,2)+Math.pow(r,2)-Math.pow(q,2))/(2*p*r));
        angleR = Math.acos((Math.pow(q,2)+Math.pow(p,2)-Math.pow(r,2))/(2*q*p));
        double[] angles=new double[]{angleP,angleQ,angleR};
        return(angles);
    }
    public static double[] altitude(double[] P, double[] Q, double[] R) {
        double[] line;
        if (Q[0] == R[0]) {
            line = new double[]{0, 1, -P[1]};
        } else if (Q[1] == R[1]) {
            line = new double[]{1, 0, -P[0]};
        } else {
            double m = -(R[0] - Q[0]) / (R[1] - Q[1]);
            double yint = P[1] - m * P[0];
            line = new double[]{m, -1, yint};
        }
        return (line);
    }
    public static double[] bisector(double[] P, double[] Q, double[] R) {
        double[] line;
        double[] M = new double[]{(Q[0]+R[0])/2,(Q[1]+R[1])/2};
        if (Q[0] == R[0]) {
            line = new double[]{0,1,-M[1]};
        } else if (Q[1] == R[1]) {
            line = new double[]{1,0,-M[0]};
        } else {
            double m = -(Q[0]-R[0])/(Q[1]-R[1]);
            double yint = M[1]-m*M[0];
            line = new double[]{m,-1,yint};
        }
        return(line);
    }
    public static double[] solveLines(double[] L1, double[] L2) {
        double x = (L1[1] * L2[2] - L1[2] * L2[1]) / (L1[0] * L2[1] - L2[0] * L1[1]);
        double y = (L1[0] * L2[2] - L2[0] * L1[2]) / (L2[0] * L1[1] - L1[0] * L2[1]);
        double[] POI = {x, y};
        return (POI);
    }

    public static String equation(double[] P, double[] Q) {
        String line;
        if (P[0] == Q[0]) {
            line = "x = " + P[0];
        } else if (P[1] == Q[1]) {
            line = "y = " + P[1];
        } else {
            double m = (Q[1] - P[1]) / (Q[0] - P[0]);
            double yint = P[1] - m * P[0];
            line = "y = " + Math.round(m * 100d) / 100d + "x + " + Math.round(yint * 100d) / 100d;
        }
        return (line);
    }

    public static boolean isNumeric(String n) {
        try {
            Double.parseDouble(n);
        } catch (NumberFormatException | NullPointerException s) {
            return false;
        }
        return true;
    }

    public boolean checkNumeric(String a, String b, String c, String d, String e, String f) {
        return !(isNumeric(a)==false || isNumeric(b)==false || isNumeric(c)==false || isNumeric(d)==false || isNumeric(e)==false || isNumeric(f)==false);
    }

    public int checkInput(double[] P, double[] Q, double[] R) { 
        int n=0;
        if ((P[1] - Q[1]) / (P[0] - Q[0]) == (P[1] - R[1]) / (P[0] - R[0])) {
            n = 1;
        }
        int pq = 0;
        int qr = 0;
        int pr = 0;
        for (int i = 0; i <= 1; i++) {
            if (P[i] == Q[i]) {
                pq++;
            }
        }
        for (int i = 0; i <= 1; i++) {
            if (Q[i] == R[i]) {
                qr++;
            }
        }
        for (int i = 0; i <= 1; i++) {
            if (P[i] == R[i]) {
                pr++;
            }
        }
        if (pq == 2 || qr == 2 || pr == 2) {
            n = 2;
        }

        return (n);
    }

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        A1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        A2 = new javax.swing.JTextField();
        B1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        B2 = new javax.swing.JTextField();
        C1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        C2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        enterButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 36)); // NOI18N
        jLabel1.setText("Triangle Properties");

        A1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Point A");

        jLabel3.setText("x-coordinate:");

        jLabel4.setText("y-coordinate:");

        A2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        B1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Point B");

        jLabel6.setText("x-coordinate:");

        jLabel7.setText("y-coordinate:");

        B2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        C1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setText("Point C");

        jLabel9.setText("x-coordinate:");

        jLabel10.setText("y-coordinate:");

        C2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        enterButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        enterButton.setText("Next");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(A1)
                                .addGap(17, 17, 17)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(A2)
                                .addGap(17, 17, 17))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(44, 44, 44)))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(B1))
                                .addGap(19, 19, 19)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(B2)
                                .addGap(17, 17, 17))
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(45, 45, 45)))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(C1)
                                .addGap(17, 17, 17)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(C2)
                                .addGap(17, 17, 17))
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(45, 45, 45)))
                .addGap(13, 13, 13))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(enterButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(A1)
                            .addComponent(A2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(C1)
                            .addComponent(C2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(B1)
                            .addComponent(B2))))
                .addGap(29, 29, 29)
                .addComponent(enterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        if (checkNumeric(A1.getText(), A2.getText(), B1.getText(), B2.getText(), C1.getText(), C2.getText()) == false) {
            JOptionPane.showMessageDialog(null, "Invalid Input", "ERROR", JOptionPane.ERROR_MESSAGE);
            A1.setText("");
            A2.setText("");
            B1.setText("");
            B2.setText("");
            C1.setText("");
            C2.setText("");
        }
        else {
            double Ax = Double.parseDouble(A1.getText());
            double Ay = Double.parseDouble(A2.getText());
            double Bx = Double.parseDouble(B1.getText());
            double By = Double.parseDouble(B2.getText());
            double Cx = Double.parseDouble(C1.getText());
            double Cy = Double.parseDouble(C2.getText());
            double[] A = {Ax, Ay};
            double[] B = {Bx, By};
            double[] C = {Cx, Cy};
            switch (checkInput(A,B,C)) {
                case 0:
                    double[] centroid = {(Ax + Bx + Cx) / 3, (Ay + By + Cy) / 3};
                    double[] ortho = solveLines(altitude(A, B, C), altitude(B, A, C));
                    double[] circum = solveLines(bisector(A,B,C),bisector(B,A,C));
                    String finalEquation = equation(ortho, centroid);
                    Answer otherFrame = new Answer();
                    otherFrame.setLocationRelativeTo(null);
                    otherFrame.setVisible(true);
                    otherFrame.SideLength(sideLength(A,B,C));
                    otherFrame.Area(area(A,B,C));
                    otherFrame.Angle(angle(A,B,C));
                    otherFrame.Circumcenter(circum);
                    otherFrame.EulersLine(finalEquation);
                    otherFrame.Orthocenter(ortho);
                    otherFrame.Centroid(centroid);
                    otherFrame.setVertices(A,B,C);
                    break;            
                case 1:
                    JOptionPane.showMessageDialog(null, "Invalid Input: The points are collinear", "ERROR", JOptionPane.ERROR_MESSAGE);
                    A1.setText("");
                    A2.setText("");
                    B1.setText("");
                    B2.setText("");
                    C1.setText("");
                    C2.setText("");
                    break;
                case 2:
                    JOptionPane.showMessageDialog(null, "Invalid Input: Duplicate Points", "ERROR", JOptionPane.ERROR_MESSAGE);
                    A1.setText("");
                    A2.setText("");
                    B1.setText("");
                    B2.setText("");
                    C1.setText("");
                    C2.setText("");
                    break;
            }
        }
    }//GEN-LAST:event_enterButtonActionPerformed

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI

.class  


.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI

.class  


.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI

.class  


.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI

.class  


.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField A1;
    private javax.swing.JTextField A2;
    private javax.swing.JTextField B1;
    private javax.swing.JTextField B2;
    private javax.swing.JTextField C1;
    private javax.swing.JTextField C2;
    private javax.swing.JButton enterButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
